# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT(coprthr, 1.1, support@browndeertechnology.com)

AC_PREFIX_DEFAULT(/usr/local/browndeer)

AC_DEFUN([SET_OPT],
		[if test x$1 != xno; then
			echo "enabled $3"
			$2=1
		else
			echo "disabled $3"
			$2=0
		fi;]
)

AC_CANONICAL_BUILD

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PATH_PROG([BASH],[bash],,[path=`$path`])
AC_PROG_MAKE_SET

# Checks for libraries.
AC_CHECK_LIB([OpenCL], [clBuildProgram])
AC_CHECK_LIB([dl], [dlopen])
AC_CHECK_LIB([pthread], [pthread_attr_init])


### extract enable/disable options

AC_ARG_ENABLE(libstdcl-clgl-support,
  AC_HELP_STRING([--enable-libstdcl-clgl-support],[enable libstdcl CLGL buffer sharing support (default=no)]),, enable_libstdcl_clgl_support=no)

AC_ARG_ENABLE(clete,
  AC_HELP_STRING([--enable-clete],[enable clete expression template acceleration (default=no)]),, enable_clete=yes)

AC_ARG_ENABLE(debug-libs,
  AC_HELP_STRING([--enable-debug-libs],[enable building debug versions of librarires (default=yes)]),, enable_debug_libs=yes)

AC_ARG_ENABLE(cltrace,
  AC_HELP_STRING([--enable-cltrace],[enable building cltrace tool (default=yes)]),, enable_cltrace=yes)

AC_ARG_ENABLE(clld,
  AC_HELP_STRING([--enable-clld],[enable building clld tool (default=yes)]),, enable_clld=yes)

AC_ARG_ENABLE(libocl,
  AC_HELP_STRING([--enable-libocl],[enable building libocl (default=no)]),, enable_libocl=no)

AC_ARG_ENABLE(libocl-ncpu,
  AC_HELP_STRING([--enable-libocl-ncpu],[enable libocl ncpu (default=yes)]),, enable_libocl_ncpu=yes)

AC_ARG_ENABLE(libocl-atigpu,
  AC_HELP_STRING([--enable-libocl-atigpu],[enable libocl atigpu (default=no)]),, enable_libocl_atigpu=no)

AC_ARG_ENABLE(libocl-bdt-builtins,
  AC_HELP_STRING([--enable-libocl-bdt-builtins],[enable libocl bdt builtins (default=no)]),, enable_libocl_bdt_builtins=no)


### check and process option dependencies and inferences
if test x$enable_libocl == xno; then
	enable_libocl_ncpu=no;
	enable_libocl_atigpu=no;
	enable_libocl_bdt_builtins=no;
fi;


### now process the selected options

SET_OPT($enable_libstdcl_clgl_support, ENABLE_CLGL, "CLGL support")
SET_OPT($enable_clete, ENABLE_CLETE, "CLETE expression template acceleration")
SET_OPT($enable_debug_libs, ENABLE_DEBUG_LIBS, "building debug versions of librarires - use \<libname\>_d.so")
SET_OPT($enable_cltrace, ENABLE_CLTRACE, "building cltrace tool")
SET_OPT($enable_clld, ENABLE_CLLD, "building clld tool")
SET_OPT($enable_libocl, ENABLE_LIBOCL, "building libocl")
SET_OPT($enable_libocl_ncpu, ENABLE_NCPU, "libocl ncpu support")
SET_OPT($enable_libocl_atigpu, ENABLE_ATIGPU, "libocl atigpu support")
SET_OPT($enable_libocl_bdt_builtins, ENABLE_BDT_BUILTINS, "libocl use bdt builtins")


OPENCL_INC=
OPENCL_LIB=
DEFAULT_OPENCL_PLATFORM=
AMD_SDK=
AC_ARG_WITH(std-sdk,
  AC_HELP_STRING([--with-std-sdk=DIR], [Use STD Debian SDK in DIR]),
  [
    if test x$withval == xno; then
		withval=/usr
	 fi;

      if test -d $withval; then
         echo "Found STD Debian SDK path"
			AMD_SDK=$withval
      else
         AC_MSG_ERROR([Could not find STD Debian SDK path])
      fi;

      if test -e $withval/include/CL/cl.h; then
        OPENCL_INC="$withval/include"
         echo "Found STD Debian SDK include path"
      else
         AC_MSG_ERROR([Could not find STD Debian SDK include path])
      fi;

      if test -e $withval/lib/libOpenCL.so; then
        OPENCL_LIB="$withval/lib"
         echo "Found STD Debian SDK lib path"
      else
         AC_MSG_ERROR([Could not find STD Debian SDK lib path])
      fi;

	 DEFAULT_OPENCL_PLATFORM=STD;

  ],
  [OPENCL_LIB=/usr/lib; OPENCL_INC=/usr/include; DEFAULT_OPENCL_PLATFORM=STD; AMD_SDK=/usr])

OPENCL_LIBNAME=OpenCL

if test $ENABLE_LIBOCL -eq 1; then 

	if ! test -e $AMD_SDK/bin/x86_64/clc21; then
		AC_MSG_ERROR([libocl requres clc21, file not found])
	fi;

	if ! test -e $AMD_SDK/lib/x86_64/builtins-x86_64-21.bc; then
		AC_MSG_ERROR([libocl requres builtins-x86_64-21.bc, file not found])
	fi;

fi;

BASH=`which bash`

AC_SUBST(BASH)

AC_SUBST(ENABLE_CLGL)
AC_SUBST(ENABLE_CLETE)
AC_SUBST(ENABLE_DEBUG_LIBS)
AC_SUBST(ENABLE_CLTRACE)
AC_SUBST(ENABLE_CLLD)
AC_SUBST(ENABLE_LIBOCL)
AC_SUBST(ENABLE_NCPU)
AC_SUBST(ENABLE_ATIGPU)
AC_SUBST(ENABLE_BDT_BUILTINS)

AC_SUBST(OPENCL_INC)
AC_SUBST(OPENCL_LIB)
AC_SUBST(OPENCL_LIBNAME)
AC_SUBST(DEFAULT_OPENCL_PLATFORM)

AC_SUBST(AMD_SDK)

AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([install-message.txt])
AC_CONFIG_FILES([src/libstdcl/Makefile])
AC_CONFIG_FILES([src/CLETE/Makefile])
AC_CONFIG_FILES([src/libocl/Makefile])
AC_CONFIG_FILES([tools/cltrace/Makefile])
AC_CONFIG_FILES([tools/xclnm/Makefile])
AC_CONFIG_FILES([tools/clld/Makefile])
AC_CONFIG_FILES([test/Makefile])
AC_CONFIG_FILES([test/test_stdcl/Makefile])
AC_CONFIG_FILES([test/test_ocl/Makefile])
AC_CONFIG_FILES([include/Makefile])
AC_CONFIG_FILES([examples/bdt_nbody/Makefile])
AC_CONFIG_FILES([examples/bdt_nbody_tutorial/Makefile])

AC_CONFIG_FILES([test/test_ocl/scripts/run_tests.sh],[chmod +x test/test_ocl/scripts/run_tests.sh])
AC_CONFIG_FILES([test/test_ocl/scripts/run_quick_tests.sh],[chmod +x test/test_ocl/scripts/run_quick_tests.sh])
AC_CONFIG_FILES([test/test_stdcl/scripts/run_tests.sh],[chmod +x test/test_stdcl/scripts/run_tests.sh])
AC_CONFIG_FILES([test/test_stdcl/scripts/run_quick_tests.sh],[chmod +x test/test_stdcl/scripts/run_quick_tests.sh])


AC_OUTPUT

